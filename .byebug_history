continue
file_arr[0][1]
file_arr[0][0]
file_arr[1]
file_arr[0]
continue
chunks == plain_text
chunks
plain_text
continue
['1','2'].concat(:&)
['1','2'].concat(:"&)
['1','2'].flatten
[]
[aaa,]
a= file[1].scan(/.{1,16}/)
62 * 16
a.count
a= file[1].scan(/.{16}/)
a = aaaaaaaaaaaaaaaa
file[1].scan(/.{16}/)
file[1]
file
continue
file[1]
continue
a = _
file[1] + 'aaaaaaaaaaaaaaaaa'
file[1]
file[1].scan(/.{16}/)
a.scan(/.{16}/)
a..scan(/.{16}/)
a = 'aaaaaaaaaaaaaaaaaaaa'
'abcdefghijklmnopqrstuvwxyz'.scan(/.{4}/)
file[1].scan(/.{16}/)
continue
file[1].scan(/.{16}/)
file[1]
continue
0.5 / 10
decipher.final
decipher.update(cipher_text)
next
iv
key
next
decipher
next
continue
cipher.final
cipher.update(data)
cipher
next
iv
i
continue
cipher
continue
cipher_obj.random_iv
cipher_obj
continue
end_time
start_time
start_time - end_time
